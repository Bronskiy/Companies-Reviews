<?php

/**
 * Companies_Model_CategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Companies_Model_CategoryTable extends Doctrine_Table {
    /**
     * Returns an instance of this class.
     * @return object Companies_Model_CategoryTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Companies_Model_Category');
    }

    /**
     * Get query to fetch all categories
     * @return Doctrine_Query
     */
    public function getQueryToFetchAll() {
        return $this->createQuery("cat")->orderBy("cat.id DESC");
    }

    /**
     * Get all categories
     * @return Doctrine_Query
     */
    public function getAll() {
        return $this->createQuery("cat")
            ->orderBy("cat.name ASC")
            ->execute();
    }

    /**
     * Get query to fetch all categories by first letter
     * @param $letter
     * @return Doctrine_Query
     */
    public function getQueryToFetchAllByLetter($letter) {
        return $this->createQuery("cat")
            ->where("UPPER(SUBSTR(cat.name, 1, 1)) = UPPER(?)", array($letter))
            ->orderBy("cat.name ASC");
    }

    /**
     * Get categories with company count
     * @param $state
     * @param $city
     * @return Doctrine_Collection
     */
    public function getCategoriesWithCompaniesCount($state, $city) {
        $city = str_replace("-", "_", $city);
        $state = mb_strtoupper($state, "UTF-8");
        
        return  $this->createQuery("cat")
            ->select("cat.*")
            ->addSelect("COUNT(com.id) as companies_count")
            ->from("Companies_Model_Category cat")
            ->leftJoin("cat.Companies com")
            ->where("com.state = ? AND com.city LIKE ? AND local_business", array($state, $city))
            ->andWhereIn("com.status", Companies_Model_Company::getActiveStatuses())
            ->groupBy("cat.id")
            ->execute();
    }

    /**
     * Get categories with companies
     * @return Doctrine_Collection
     */
    public function getCategoriesWithCompaniesQuery() {
        $rStatus = Companies_Model_Review::STATUS_PUBLISHED;

        return $this->createQuery("cat")
            ->select("cat.*, c.*")
            ->addSelect("(SELECT ROUND(AVG(r.rating), 2)
                FROM Companies_Model_Review r
                WHERE r.status = '" . $rStatus . "'
                AND r.company_id = c.id) as rating")
            ->addSelect("(SELECT COUNT(rc.id)
                FROM Companies_Model_Review rc
                WHERE rc.status = '" . $rStatus . "'
                AND rc.company_id = c.id) as review_count")
            ->from("Companies_Model_Category cat")
            ->leftJoin("cat.Companies c")
            ->whereIn("c.status", Companies_Model_Company::getActiveStatuses())
            ->orderBy("cat.name ASC, c.name ASC");
    }
    
    /**
     * Is category name exists
     * @param $uri
     */
    public function isCategoryExists($uri)
    {
        $res = $this->createQuery()
            ->select('c.id')
            ->from('Companies_Model_Category c')
            ->where('c.uri = ?', array($uri))
            ->limit(1)
            ->execute(array(), Doctrine_Core::HYDRATE_SCALAR);

        return (bool)$res;
    }


    /**
     * Get category by uri
     * @param type $uri
     * @return type
     */
    public function getByUri($uri) {
        $res = $this->createQuery("c")
            ->select("c.*")
            ->where("c.uri = ? ", $uri)
            ->execute();

        return count($res) ? $res->get(0) : false;
    }
    
    /**
     * Query for search result pagination
     * @param string $searchString
     */
    public function getQueryToFetchSearchAll($searchString) {
        return $this->createQuery("c")
            ->select("c.*")
            ->where("c.name LIKE ?", array("%" . $searchString . "%"))
            ->orderBy("c.name ASC");
    }

    /**
     * Get count by letter
     * @param $letter
     * @return int
     */
    public function getCountByLetter($letter) {
        $res = $this->createQuery("cat")
            ->select("COUNT(cat.id) as count")
            ->where("UPPER(SUBSTR(cat.name, 1, 1)) = UPPER(?)", array($letter))
            ->orderBy("cat.name ASC")
            ->execute();

        if ($res) {
            $res = (int) $res[0]->count;
        } else {
            $res = 0;
        }

        return $res;
    }


    /**
     * Get national company categories
     * @return Doctrine_Query
     */
    public function getNationalCompanyCategories() {
        return $this->createQuery("c")
            ->select("c.*")
            ->innerJoin("c.Companies com WITH NOT local_business")
            ->orderBy("c.name ASC")
            ->execute();
    }
}