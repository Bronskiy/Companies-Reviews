<?php

/**
 * Companies_Model_Base_Review
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $client_name
 * @property string $client_from
 * @property clob $review
 * @property decimal $rating
 * @property enum $status
 * @property string $confirm_hash
 * @property string $reconcile_hash
 * @property string $mail
 * @property integer $company_id
 * @property integer $company_employee_id
 * @property string $video_attach_hash
 * @property date $video_attach_date
 * @property string $client_avatar
 * @property clob $owner_comment
 * @property Companies_Model_Company $Company
 * @property Companies_Model_Employee $Employee
 * @property Doctrine_Collection $Videos
 * @property Doctrine_Collection $CouponReviews
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Companies_Model_Base_Review extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('reviews');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('client_name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('client_from', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('review', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('rating', 'decimal', 3, array(
             'type' => 'decimal',
             'scale' => 2,
             'notnull' => true,
             'length' => '3',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'not_processed',
              1 => 'processing',
              2 => 'error',
              3 => 'published',
              4 => 'reconciliation',
              5 => 'unconfirmed',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('confirm_hash', 'string', 32, array(
             'type' => 'string',
             'unique' => true,
             'length' => '32',
             ));
        $this->hasColumn('reconcile_hash', 'string', 32, array(
             'type' => 'string',
             'unique' => true,
             'length' => '32',
             ));
        $this->hasColumn('mail', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('company_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('company_employee_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('video_attach_hash', 'string', 32, array(
             'type' => 'string',
             'unique' => true,
             'length' => '32',
             ));
        $this->hasColumn('video_attach_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('client_avatar', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('owner_comment', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Companies_Model_Company as Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));

        $this->hasOne('Companies_Model_Employee as Employee', array(
             'local' => 'company_employee_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'cascade'));

        $this->hasMany('Companies_Model_CompanyVideo as Videos', array(
             'local' => 'id',
             'foreign' => 'review_id'));

        $this->hasMany('Companies_Model_CouponReview as CouponReviews', array(
             'local' => 'id',
             'foreign' => 'review_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}