<?php

/**
 * Companies_Model_Base_Company
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property integer $plan_id
 * @property integer $discount_id
 * @property string $logo
 * @property string $name
 * @property string $address
 * @property string $city
 * @property string $state
 * @property integer $zip
 * @property string $phone
 * @property string $website
 * @property string $mail
 * @property integer $business_since
 * @property string $owner
 * @property clob $about_us
 * @property string $latitude
 * @property string $longitude
 * @property string $facebook_link
 * @property string $twitter_link
 * @property string $linkedin_link
 * @property string $google_link
 * @property clob $offered_services
 * @property string $code_letter
 * @property string $code_num
 * @property integer $rating_goal
 * @property enum $status
 * @property string $uri
 * @property timestamp $payment_date
 * @property string $subscription_id
 * @property integer $local_business
 * @property integer $show_address
 * @property string $yelp_link
 * @property clob $review_email_text
 * @property Companies_Model_Category $Category
 * @property Companies_Model_Plan $Plan
 * @property Companies_Model_Discount $Discount
 * @property Doctrine_Collection $Articles
 * @property Doctrine_Collection $Cards
 * @property Doctrine_Collection $Payments
 * @property Doctrine_Collection $Promos
 * @property Doctrine_Collection $Videos
 * @property Doctrine_Collection $Coupons
 * @property Doctrine_Collection $Employees
 * @property Doctrine_Collection $Images
 * @property Doctrine_Collection $reviews
 * @property Doctrine_Collection $Users
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Companies_Model_Base_Company extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('companies');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('plan_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('discount_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('state', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '10',
             ));
        $this->hasColumn('zip', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('phone', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('mail', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('business_since', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));
        $this->hasColumn('owner', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('about_us', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('latitude', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('longitude', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('facebook_link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('twitter_link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('linkedin_link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('google_link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('offered_services', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));
        $this->hasColumn('code_letter', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '4',
             ));
        $this->hasColumn('code_num', 'string', 5, array(
             'type' => 'string',
             'length' => '5',
             ));
        $this->hasColumn('rating_goal', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'active',
              1 => 'deleted',
              2 => 'expired',
              3 => 'suspended',
              4 => 'not_activated',
              5 => 'cancelled',
              6 => 'unowned',
              7 => 'taken',
             ),
             'notnull' => true,
             'default' => 'not_activated',
             ));
        $this->hasColumn('uri', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('payment_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('subscription_id', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('local_business', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 1,
             'length' => '1',
             ));
        $this->hasColumn('show_address', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 1,
             'length' => '1',
             ));
        $this->hasColumn('yelp_link', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('review_email_text', 'clob', 65535, array(
             'type' => 'clob',
             'length' => '65535',
             ));


        $this->index('companies_state', array(
             'fields' => 
             array(
              0 => 'state',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Companies_Model_Category as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'cascade'));

        $this->hasOne('Companies_Model_Plan as Plan', array(
             'local' => 'plan_id',
             'foreign' => 'id',
             'onDelete' => 'cascade',
             'onUpdate' => 'cascade'));

        $this->hasOne('Companies_Model_Discount as Discount', array(
             'local' => 'discount_id',
             'foreign' => 'id',
             'onDelete' => 'set null',
             'onUpdate' => 'cascade'));

        $this->hasMany('Companies_Model_CompanyArticle as Articles', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_CompanyCard as Cards', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_CompanyPayment as Payments', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_CompanyPromo as Promos', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_CompanyVideo as Videos', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_Coupon as Coupons', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_Employee as Employees', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_Image as Images', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Companies_Model_Review as reviews', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Users_Model_User as Users', array(
             'local' => 'id',
             'foreign' => 'company_id'));
    }
}